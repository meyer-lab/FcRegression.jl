pipeline {
  agent { label 'docker' }
  options {
    timeout(time: 1, unit: 'HOURS')
    parallelsAlwaysFailFast()
  }
  stages {
    stage('Clean') { steps { sh 'git reset --hard && git clean -ffdx' } }
    stage('Test') {
      steps {
        sh 'julia -e \'using Pkg; Pkg.activate("."); Pkg.test("FcgR"; coverage=true)\''
        sh 'make coverage.cob'
        cobertura autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: 'coverage.cob', enableNewApi: true, failUnhealthy: false, failUnstable: false, maxNumberOfBuilds: 0, onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false
      }
    }
    stage('Build Figures') {
      steps {
        sh 'make all'
        archiveArtifacts artifacts: '*.pdf', onlyIfSuccessful: true
        publishHTML([allowMissing:false, alwaysLinkToLastBuild:false, keepAll:true, reportDir:'output/depletion', reportFiles:'manuscript.html', reportName:'Depletion Paper'])
        publishHTML([allowMissing:false, alwaysLinkToLastBuild:false, keepAll:true, reportDir:'output/translation', reportFiles:'manuscript.html', reportName:'Translation Paper'])
      }
    }
  }
  post {
    always {
      cleanWs cleanWhenFailure: false, cleanWhenNotBuilt: false, cleanWhenUnstable: false
    }
  }
}
